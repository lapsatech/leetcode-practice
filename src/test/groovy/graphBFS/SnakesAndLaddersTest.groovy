package graphBFS

import spock.lang.Specification
import spock.lang.Unroll

class SnakesAndLaddersTest extends Specification {

  @Unroll
  def 'test'(def board, def expectResult, def expectPath) {
    given:
    def subject = new SnakesAndLadders();

    when:
    def result = subject.snakesAndLadders(board as int[][])

    then:
    result == expectResult

    when:
    def path = subject.snakesAndLaddersPath(board as int[][])

    then:
    path == expectPath
    
    where:
    board                           | expectResult  | expectPath
    [
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    ]                               | 24            | [0, 5, 11, 17, 23, 29, 35, 41, 47, 53, 59, 65, 71, 77, 83, 89, 95, 101, 107, 113, 119, 125, 131, 137, 143]

    [
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
      [-1, 144, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    ]                               | 1             | [0, 143]

    [
      [-1,-1,-1,-1,-1,-1],
      [-1,-1,-1,-1,-1,-1],
      [-1,-1,-1,-1,-1,-1],
      [-1,35,-1,-1,13,-1],
      [-1,-1,-1,-1,-1,-1],
      [-1,15,-1,-1,-1,-1]
    ]                                | 4            | [0, 2, 7, 34, 35]

    [
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ]
    ]                                | 4            | [0, 6, 12, 18, 24]

    [
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, 25, -1, -1, -1 ]
    ]                                | 1            | [0, 24]

    [
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, 25, -1 ],
      [ -1, -1, -1, -1, -1 ]
    ]                                | 1            | [0, 24]

    [
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, 25, -1, -1 ],
      [ -1, -1, -1, -1, -1 ]
    ]                                | 2            | [0, 1, 24]

    [
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, 25, -1 ],
      [ -1, -1, -1, -1, -1 ],
      [ -1, -1, -1, -1, -1 ]
    ]                                | 3            | [0, 1, 7, 24]

    [
      [-1, -1, -1, -1, 48, 5, -1],
      [12, 29, 13, 9, -1, 2, 32],
      [-1, -1, 21, 7, -1, 12, 49],
      [42, 37, 21, 40, -1, 22, 12],
      [42, -1, 2, -1, -1, -1, 6],
      [39, -1, 35, -1, -1, 39,-1],
      [-1, 36, -1, -1, -1, -1, 5]
    ]                                | 3            | [0, 35, 28, 48]

    [[-1, -1], [-1, 3]]              | 1            | [0, 3]
  }
}